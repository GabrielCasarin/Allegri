<MetaReconhecedor>
Grammar Exp
Grammar

<Grammar>
	q0 q2 q3 q4 q5
	q0
	q5
	NT = .

	(q0, 'NT') -> q2\criar_submaquina
	(q2, '=') -> q3\inicio_regra
	q3 => (Exp, q4)
	(q4, '.') -> q5\fim_regra
	(q5, 'NT') -> q2\criar_submaquina
</Grammar>

<Exp>
	q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q0 q11 q12
	q0
	q1
	NT TERM ( ) [ ] { } |

	(q0, '(') -> q5\(
	(q0, '[') -> q8\[
	(q0, '{') -> q11\{
	(q1, '(') -> q5\(
	(q1, '[') -> q8\[
	(q1, '{') -> q11\{
	(q6, ')') -> q1\)
	(q9, ']') -> q1\]
	(q12, '}') -> q1\}
	(q0, 'NT') -> q1\chamada
	(q0, 'TERM') -> q1\terminal
	(q1, 'NT') -> q1\chamada
	(q1, 'TERM') -> q1\terminal
	(q1, '|') -> q1\|
	q5 => (Exp, q6)
	q8 => (Exp, q9)
	q11 => (Exp, q12)
</Exp>

</MetaReconhecedor>
